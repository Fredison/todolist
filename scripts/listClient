#!/bin/bash

function call() {
    list=$("$@")
    code=$(echo $list | awk -F"STATUS:" '{print $2}')
    json=$(echo $list | awk -F"STATUS:" '{print $1}')
}

call curl -c cookie-jar -w "STATUS:%{http_code}" -s -X GET -b cookie-jar -k https://info3103.cs.unb.ca:24842/lists

# Retrieve all lists
if [[ $code == "200" ]]; 
then 
    echo "Successfully retrieved all lists"; 
else
    echo "Failed to retrieve all lists: $code";
    echo "Failed to retrieve the list: $code" >> testing.log;
    echo $json >> testing.log;
fi;

call curl -c cookie-jar -b cookie-jar -w "STATUS:%{http_code}" -s -H "Content-Type: application/json" -X POST -d '{"title": "Aperture Laboratories", "description": "There is testing to be done"}' -k https://info3103.cs.unb.ca:24842/lists

# Create new list
if [[ $code == "201" ]]; 
then 
    echo "Successfully created new list"; 
else
    echo "Failed to create new list: $code";
    echo "Failed to create new list: $code" >> testing.log;
    echo $json >> testing.log;
fi;

# Retrieve all lists and get an Id
uri=$(echo $json | python -c "import sys, json; print json.load(sys.stdin)['uri']" &> /dev/null);

call curl -c cookie-jar -w "STATUS:%{http_code}" -s -X GET -b cookie-jar -k "$uri"

# Retrieve a list
if [[ $code == "200" ]]; 
then 
    echo "Successfully retrieved list"; 
else
    echo "Failed to retrieve list: $code";
    echo "Failed to retrieve list: $code" >> testing.log;
    echo $json >> testing.log;
    echo "At uri: $uri" >> testing.log
fi;

call curl -c cookie-jar -w "STATUS:%{http_code}" -s -X DELETE -b cookie-jar -k "$uri"

# Remove a list
if [[ $code == "200" ]]; 
then 
    echo "Successfully removed the list"; 
else
    echo "Failed to remove the list: $code";
    echo "Failed to remove the list: $code" >> testing.log;
    echo $json >> testing.log;
fi;